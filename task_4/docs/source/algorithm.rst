=================
Прикладная задача
=================

Математическая формулировка
===========================

Дано
----

+ Дискретное ``N``-мерное пространство ``STATES``.
  - Каждая компонента вектора в этом пространстве принимает значения из множества ``{0, 1, ..., M - 1}``

+ Натуральное число ``MAX_COST``

+ Отображение ``COST`` из пространства ``STATES`` в множество натуральных чисел

+ Отображение ``REL`` из пространства ``STATES`` в интервал ``[0, 1]``

Задача
------

Найти такой вектор ``BEST_STATE``, что значение функции ``REL`` будет максимально
при выполнении условия ``COST(BEST_STATE) <= MAX_COST``.
Если таковых несколько, то ответом является любой.


Алгоритм
========

Основная идея алгоритма
-----------------------

Чтобы решить задачу, необходимо обойти все пространство ``STATES``

Однако, если для вектора ``STATE`` выполняется условие
``COST(STATE[1]) + ... + COST(STATE[K]) > MAX_COST``,
то при решении задачи можно сэкономить несколько операций,
и не рассматривать ни один вектор ``X``, такой что
``STATE[i] == X[i]`` для всех ``i = 1, 2, ..., K``.

Алгоритм
--------

Список ``state`` содержит вектор пространтва ``STATES``.

Обходим пространство в лексикографическом порядке::

    (0, ..., 0, 0, 0),
    (0, ..., 0, 0, 1),
    ..................
    (0, ..., 0, 0, M)
    (0, ..., 0, 1, 0)
    ..................
    (M, ..., M, M, M)

В случае, когда по первой части вектора мы можем сразу сказать, что он не является решением,
мы можем пропустить обход подпространства.
